import{d as n,s as t}from"./index-b75866a9.js";const i=n("messages",{state:()=>({messages:[],loading:!1,error:null}),getters:{unreadCount:s=>s.messages.filter(e=>!e.read).length,sortedMessages:s=>[...s.messages].sort((e,r)=>new Date(r.created_at)-new Date(e.created_at))},actions:{async fetchMessages(){this.loading=!0;try{console.log("Récupération des messages...");const{data:s,error:e}=await t.from("messages").select("*").order("created_at",{ascending:!1});if(e)throw console.error("Erreur Supabase lors de la récupération:",e),e;console.log("Messages récupérés:",s),this.messages=s,this.error=null}catch(s){console.error("Error fetching messages:",s),this.error="Erreur lors du chargement des messages"}finally{this.loading=!1}},async addMessage(s){try{console.log("Tentative d'ajout du message:",s);const{data:e,error:r}=await t.from("messages").insert([{sender:s.name,email:s.email,subject:s.subject,content:s.content,status:"unread",created_at:new Date().toISOString()}]).select();if(r)throw console.error("Erreur Supabase lors de l'ajout:",r),r;console.log("Message ajouté avec succès:",e),e&&e[0]&&this.messages.unshift(e[0])}catch(e){throw console.error("Erreur lors de l'ajout du message:",e),e}},async updateMessageStatus(s,e){try{const{error:r}=await t.from("messages").update({status:e}).eq("id",s);if(r)throw r;const a=this.messages.findIndex(o=>o.id===s);a!==-1&&(this.messages[a].status=e)}catch(r){throw console.error("Error updating message status:",r),r}},async deleteMessage(s){try{const{error:e}=await t.from("messages").delete().eq("id",s);if(e)throw e;this.messages=this.messages.filter(r=>r.id!==s)}catch(e){throw console.error("Error deleting message:",e),e}}}});export{i as u};
